type: update
id: sqldb-multiregion-logic
name: DataBase MultiRegion Logic

baseUrl: https://raw.githubusercontent.com/sych74/mysql-multiregion/master

mixins:
  - https://raw.githubusercontent.com/sych74/mysql-cluster/v3.0.0/scripts/common.yml
  - /scripts/common.yml

globals:
  DB_USER: ${settings.db_user:user-[fn.random]}
  DB_PASS: ${settings.db_pswd:[fn.password(20)]}
  REPLICA_USER: ${settings.replica_user:repl-[fn.random]}
  REPLICA_PSWD: ${settings.replica_pswd:[fn.password(20)]}
  scheme: ${settings.scheme:slave}
  galera_server_id: ${settings.galera_server_id:[fn.random]}
  galera_segment_id: ${settings.galera_segment_id:1}
  galera_cluster_name: ${settings.galera_cluster_name:galera-cluster-[fn.random]}

onInstall:
  - getClusterEnvs
  - initCluster

actions:
  getClusterEnvs:
    - script: ${baseUrl}/scripts/getClusterEnvs.js
      envName: ${env.envName}
    - setGlobals:
        DBEnvs: ${response.items.join(,)}    

  initCluster:
    script: |
      var DBEnvs = '${globals.DBEnvs}'.split(','), actions = [], nodes_address = "";
      for (var i = 0, n = DBEnvs.length; i < n; i ++) {
        var resp = jelastic.env.control.GetEnvInfo(DBEnvs[i], session);
        if (resp.result != 0) return resp;
        for (var l = 0, k = resp.nodes; l < k.length; l++) {
          if (k[l].nodeGroup == 'sqldb') {
            nodes_address += k[l].address + ",";
          }
        }
      }
      nodes_address = nodes_address.slice(0, -1);
      for (var i = 0, n = DBEnvs.length; i < n; i ++) {
        actions.push({
          jps: "${baseUrl}/scripts/sqldb-configuration.jps?_r=${fn.random}",
          envName: "DBEnvs[i]",
          settings: {
            DB_USER: "${globals.DB_USER}",
            DB_PASS: "${globals.DB_PASS}",
            REPLICA_USER: "${globals.REPLICA_USER}",
            REPLICA_PSWD: "${globals.REPLICA_PSWD}",
            scheme: "${globals.scheme}",
            galera_nodes_array: nodes_address,
            galera_server_id: "${globals.galera_server_id}",
            galera_segment_id: i,
            galera_cluster_name: ${globals.galera_cluster_name}
          }
        }
        return { result: 0, onAfterReturn: { install: actions } };
        
