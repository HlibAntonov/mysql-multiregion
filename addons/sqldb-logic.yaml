type: update
id: sqldb-multiregion-logic
name: DataBase MultiRegion Logic

baseUrl: https://raw.githubusercontent.com/sych74/mysql-multiregion/master

mixins:
  - https://raw.githubusercontent.com/sych74/mysql-cluster/v3.0.0/scripts/common.yml
  - /scripts/common.yml

globals:
  DB_CLUSTER_PATH: https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/v3.0.0
  DB_USER: ${settings.db_user:user-[fn.random]}
  DB_PASS: ${settings.db_pswd:[fn.password(20)]}
  REPLICA_USER: ${settings.replica_user:repl-[fn.random]}
  REPLICA_PSWD: ${settings.replica_pswd:[fn.password(20)]}
  SCHEME: ${settings.scheme:slave}
  TARGET_NODES: ${settings.target_nodes:sqldb}
  SLAVE_CONF: /etc/mysql/conf.d/slave.cnf
  MASTER_CONF: /etc/mysql/conf.d/master.cnf
  GALERA_CONF: /etc/mysql/conf.d/galera.cnf

onInstall:
  - getClusterEnvs
  - initPrimarySlave



actions:
  getClusterEnvs:
    - script: ${baseUrl}/scripts/getClusterEnvs.js
      envName: ${env.envName}
    - setGlobals:
        DBEnvs: ${response.items.join(,)}    

  initAsyncClusters:
    script: |
        var DBEnvs = '${globals.DBEnvs}'.split(','), actions = [];
        var get_master_config_cmd = "wget ${globals.DB_CLUSTER_PATH}/configs/master.cnf -O ${globals.MASTER_CONF};";
        var get_slave_config_cmd = "wget ${globals.DB_CLUSTER_PATH}/configs/slave.cnf -O ${globals.SLAVE_CONF};";
        set_report_host_cmd = "";
        for (var i = 0, n = DBEnvs.length; i < n; i ++) {
          if (/-1/.test(DBEnvs[i]) {
            
          
          }
        }


  primaryConfiguration:
    - cmd[sqldb]: |-
        wget ${globals.DB_CLUSTER_PATH}/configs/master.cnf -O ${globals.master_conf};
        sed -i "s/report_host.*/report_host = node${nodes.sqldb.master.id}/" ${globals.master_conf}; 
        sed -i "s/server-id.*/server-id = ${nodes.sqldb.master.id}/" ${globals.master_conf};
        sed -i "s/auto-increment-offset.*/auto-increment-offset = ${this}/" ${globals.master_conf};
        sed -i '/log-slave-updates/d' ${globals.master_conf};

  secondaryConfiguration:
    - cmd[sqldb]: |-
        wget ${globals.DB_CLUSTER_PATH}/configs/slave.cnf -O ${globals.slave_conf} &>> /var/log/run.log;
        sed -i "s/report_host.*/report_host = node${nodes.sqldb.master.id}/" ${globals.slave_conf};
        sed -i "s/server-id.*/server-id = ${nodes.sqldb.master.id}/" ${globals.slave_conf};
        sed -i '/log-slave-updates/d' ${globals.slave_conf};
        sed -i '/read_only.*/d' ${globals.slave_conf};

  galeraConfiguration:
    - cmd[sqldb]: |-
        [ -e /etc/systemd/system/mariadb.service.d ] && wget ${globals.path}/scripts/mariadb-systemd-override.conf -O /etc/systemd/system/mariadb.service.d/bootstrap.conf || wget ${globals.path}/scripts/mysql -O /etc/init.d/mysql;
        chmod +x /usr/local/sbin/setMySQLOOMScore; echo '/etc/systemd/system/mariadb.service.d/bootstrap.conf' >> /etc/jelastic/redeploy.conf; systemctl daemon-reload
      user: root
    - cmd[sqldb]: |-
        wget ${globals.DB_CLUSTER_PATH}/configs/galera.cnf -O ${globals.galera_conf} &>> /var/log/run.log;
        
  xtradbConfiguration:
    - cmd[sqldb]: |-
        [ -e /etc/systemd/system/mariadb.service.d ] && wget ${globals.path}/scripts/mariadb-systemd-override.conf -O /etc/systemd/system/mariadb.service.d/bootstrap.conf || wget ${globals.path}/scripts/mysql -O /etc/init.d/mysql;
        chmod +x /usr/local/sbin/setMySQLOOMScore; echo '/etc/systemd/system/mariadb.service.d/bootstrap.conf' >> /etc/jelastic/redeploy.conf; systemctl daemon-reload
      user: root
    - cmd[sqldb]: |-
        wget ${globals.DB_CLUSTER_PATH}/configs/xtradb.cnf -O ${globals.galera_conf} &>> /var/log/run.log;
