actions:
  getReplicationUser:
    - jelastic.env.control.GetDockerConfig:
      nodeId: ${nodes.sqldb.master.id}
    - setGlobals:
        REPLICA_USER: ${response.object.dockerEnvVars.REPLICA_USER}
        REPLICA_PSWD: ${response.object.dockerEnvVars.REPLICA_PSWD}

  setupGlobals:
    - script: |
        var regions = '${settings.regions}'.split(','),
            onAfterReturn = { setGlobals: {} },
            glbs = onAfterReturn.setGlobals;
        for (var cluster = 1, n = regions.length + 1; cluster < n; cluster ++) {
          var resp = jelastic.env.control.GetEnvInfo('${settings.envName}-db-' + cluster, session);
          if (resp.result != 0) return resp;
          glbs["dbID-" + cluster] = resp.nodes[0].id;
          glbs["dbIP-" + cluster] = resp.nodes[0].address;
        }
        for (var cluster = 1, n = 2; cluster <= n; cluster ++) {
          var resp = jelastic.env.control.GetEnvInfo('${settings.envName}-lb-' + cluster, session);
          if (resp.result != 0) return resp;
          glbs["lbID-" + cluster] = resp.nodes[0].id;
          glbs["lbIP-" + cluster] = resp.nodes[0].address;
        }
        return { result: 0, onAfterReturn: onAfterReturn };
        
  getClusterEnvs:
    - script: ${baseUrl}/scripts/getClusterEnvs.js
      envName: ${settings.envName}-db-1
    - setGlobals:
        DBEnvs: ${response.items.join(,)}
    - script: ${baseUrl}/scripts/getClusterEnvs.js
      envName: ${settings.envName}-lb-1
    - setGlobals:
        ProxySQLEnvs: ${response.items.join(,)}


  getEnvIndex:
    - script: |
        var envNameSeparator = "-", index, tmp;
        tmp = '${env.envName}'.split(envNameSeparator);
        index = tmp.pop();
        if (/\d+/.test(index)) {
            index = parseInt(index, 10);
        } else {
            index = null;
        }        
        return { result: 0, index: index };
